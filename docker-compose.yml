version: "3.8"
services:
  dashboard-logcomex-app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${APP_PORT:-8000}:8000"
    volumes:
      - dashboard_logcomex_db_storage:/php/laravel/storage
      - .:/php/laravel
    networks:
      - dashboard_logcomex_network
    environment:
      - APP_NAME=${APP_NAME:-Laravel}
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - APP_URL=${APP_URL:-http://localhost}
      - APP_KEY=${APP_KEY}
      - APP_LOCALE=${APP_LOCALE:-en}
      - APP_FALLBACK_LOCALE=${APP_FALLBACK_LOCALE:-en}
      - LOG_CHANNEL=${LOG_CHANNEL:-stack}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST:-dashboard_logcomex_db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-laravel}
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD}
      - SESSION_DRIVER=${SESSION_DRIVER:-database}
      - CACHE_STORE=${CACHE_STORE:-database}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-database}
      - OCTANE_SERVER=${OCTANE_SERVER:-frankenphp}
    depends_on:
      dashboard_logcomex_db:
        condition: service_healthy

  dashboard_logcomex_db:
    image: "mysql/mysql-server:8.0"
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: "${DB_DATABASE:-logcomex}"
      MYSQL_USER: "${DB_USERNAME:-logcomex}"
      MYSQL_PASSWORD: "${DB_PASSWORD:-password}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD_ROOT:-root}"
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - dashboard_logcomex_db_data:/var/lib/mysql
    networks:
      - dashboard_logcomex_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uroot", "-p${DB_PASSWORD_ROOT:-root}"]
      retries: 3
      timeout: 10s
      interval: 5s
      start_period: 30s

networks:
  dashboard_logcomex_network:
    driver: bridge

volumes:
  dashboard_logcomex_db_data:
    driver: local
  dashboard_logcomex_db_storage:
    driver: local